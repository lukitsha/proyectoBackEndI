{
	"info": {
		"_postman_id": "bce83c73-c625-4667-aff8-c928529c87e4",
		"name": "Airsoft API",
		"description": "Colección de pruebas completas para la Entrega FINAL (Airsoft E-commerce API). Incluye productos, carritos, casos de error y vistas, con variables y descripciones paso a paso.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "36232829"
	},
	"item": [
		{
			"name": "00 - Ping & Info",
			"item": [
				{
					"name": "API Info",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status 200', function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api"
							]
						},
						"description": "Verifica que el servidor esté levantado y devuelve endpoints disponibles."
					},
					"response": []
				},
				{
					"name": "Home (HTML)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status 200', function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								""
							]
						},
						"description": "Carga la vista Home con Handlebars. Útil para verificar server-side rendering."
					},
					"response": []
				}
			]
		},
		{
			"name": "01 - Productos",
			"item": [
				{
					"name": "Crear producto — Réplica (→ PID1)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status 201', function () { pm.response.to.have.status(201); });",
									"var data = pm.response.json();",
									"pm.test('Tiene _id', function(){ pm.expect(data && data.data && data.data._id).to.exist; });",
									"if (data && data.data && data.data._id) {",
									"  pm.collectionVariables.set('PID1', data.data._id);",
									"}"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"M4A1 Carbine Elite TEST\",\n    \"description\": \"Réplica M4A1 con sistema AEG de alta calidad\",\n    \"code\": \"M4-ELITE-001\",\n    \"price\": 48000,\n    \"category\": \"replicas\",\n    \"stock\": 15,\n    \"status\": true,\n    \"thumbnails\": [\n        \"https://picsum.photos/seed/m4/600/400\"\n    ],\n    \"specs\": {\n        \"caliber\": \"6mm\",\n        \"weight\": 2.9,\n        \"length\": 85,\n        \"firingMode\": \"Semi/Full Auto\",\n        \"hopUp\": true\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/products",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"products"
							]
						},
						"description": "Crea una réplica completa para pruebas. Esperado: 201 y data._id → guarda en PID1."
					},
					"response": []
				},
				{
					"name": "Crear producto — BBs (→ PID2)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status 201', function () { pm.response.to.have.status(201); });",
									"var data = pm.response.json();",
									"pm.test('Tiene _id', function(){ pm.expect(data && data.data && data.data._id).to.exist; });",
									"if (data && data.data && data.data._id) {",
									"  pm.collectionVariables.set('PID2', data.data._id);",
									"}"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"BBs 0.25g Premium\",\n    \"description\": \"Balines 0.25g alta precisión\",\n    \"code\": \"BBS-025-PR\",\n    \"price\": 6500,\n    \"category\": \"bbs\",\n    \"stock\": 2000,\n    \"status\": true,\n    \"thumbnails\": [\n        \"https://picsum.photos/seed/bbs/600/400\"\n    ],\n    \"specs\": {\n        \"weight\": 0.25,\n        \"diameter\": 6,\n        \"quantity\": 3000,\n        \"material\": \"Bio\"\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/products",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"products"
							]
						},
						"description": "Crea BBs para pruebas. Esperado: 201 y data._id → guarda en PID2."
					},
					"response": []
				},
				{
					"name": "Crear producto — Battery (→ PID_NUEVO)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status 201', function () { pm.response.to.have.status(201); });",
									"var data = pm.response.json();",
									"if (data && data.data && data.data._id) { pm.collectionVariables.set('PID_NUEVO', data.data._id); }"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Battery 11.1V 1200mAh\",\n    \"description\": \"Batería LiPo de alto rendimiento\",\n    \"code\": \"BAT-111-1200\",\n    \"price\": 12000,\n    \"category\": \"batteries\",\n    \"stock\": 50,\n    \"status\": true,\n    \"specs\": {\n        \"voltage\": 11.1,\n        \"capacity\": 1200,\n        \"chemistry\": \"LiPo\",\n        \"connector\": \"T-Plug\"\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/products",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"products"
							]
						},
						"description": "Crea una batería para pruebas de reemplazo de carrito. Guarda _id en PID_NUEVO."
					},
					"response": []
				},
				{
					"name": "Listar productos (paginación + filtro category)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/products?limit=1&page=1&sort=asc&category=replicas",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"products"
							],
							"query": [
								{
									"key": "limit",
									"value": "1"
								},
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "sort",
									"value": "asc"
								},
								{
									"key": "category",
									"value": "replicas"
								}
							]
						},
						"description": "Espera payload con 1 producto (limit=1), category=replicas y paginación completa."
					},
					"response": []
				},
				{
					"name": "Buscar productos (query=M4)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/products?query=M4",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"products"
							],
							"query": [
								{
									"key": "query",
									"value": "M4"
								}
							]
						},
						"description": "Debe incluir el producto 'M4A1 Carbine Elite' en payload."
					},
					"response": []
				},
				{
					"name": "Obtener producto por ID (PID1)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/products/{{PID1}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"products",
								"{{PID1}}"
							]
						},
						"description": "Devuelve el producto creado como PID1."
					},
					"response": []
				},
				{
					"name": "Actualizar producto (precio)",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"price\": 51000 }"
						},
						"url": {
							"raw": "{{baseUrl}}/api/products/{{PID1}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"products",
								"{{PID1}}"
							]
						},
						"description": "Actualiza el precio de PID1 a 51000."
					},
					"response": []
				},
				{
					"name": "Eliminar producto (PID2)",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/products/{{PID2}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"products",
								"{{PID2}}"
							]
						},
						"description": "Elimina el producto PID2. Útil para probar delete (opcional)."
					},
					"response": []
				}
			]
		},
		{
			"name": "02 - Carritos",
			"item": [
				{
					"name": "Crear carrito (→ CID)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status 201', function(){ pm.response.to.have.status(201); });",
									"var data = pm.response.json();",
									"if (data && data.data && (data.data._id || data.data.id)) {",
									"  pm.collectionVariables.set('CID', data.data._id || data.data.id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/carts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"carts"
							]
						},
						"description": "Crea un carrito vacío y guarda _id en CID."
					},
					"response": []
				},
				{
					"name": "Agregar producto a carrito (PID1 x2)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"quantity\": 2 }"
						},
						"url": {
							"raw": "{{baseUrl}}/api/carts/{{CID}}/product/{{PID1}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"carts",
								"{{CID}}",
								"product",
								"{{PID1}}"
							]
						},
						"description": "Agrega el producto PID1 con quantity=2 al carrito CID."
					},
					"response": []
				},
				{
					"name": "Obtener carrito con populate",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/carts/{{CID}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"carts",
								"{{CID}}"
							]
						},
						"description": "Devuelve el carrito con los productos poblados (objeto completo en products[].product)."
					},
					"response": []
				},
				{
					"name": "Resumen de carrito",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/carts/{{CID}}/summary",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"carts",
								"{{CID}}",
								"summary"
							]
						},
						"description": "Retorna totales: totalProducts y totalAmount."
					},
					"response": []
				},
				{
					"name": "Actualizar SOLO cantidad (PID1 → 5)",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"quantity\": 5 }"
						},
						"url": {
							"raw": "{{baseUrl}}/api/carts/{{CID}}/products/{{PID1}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"carts",
								"{{CID}}",
								"products",
								"{{PID1}}"
							]
						},
						"description": "Actualiza quantity de PID1 a 5."
					},
					"response": []
				},
				{
					"name": "Reemplazar TODOS los productos (PID1 + PID_NUEVO)",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[ { \"product\":\"{{PID1}}\", \"quantity\":1 }, { \"product\":\"{{PID_NUEVO}}\", \"quantity\":3 } ]"
						},
						"url": {
							"raw": "{{baseUrl}}/api/carts/{{CID}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"carts",
								"{{CID}}"
							]
						},
						"description": "Reemplaza los productos del carrito por PID1 x1 y PID_NUEVO x3."
					},
					"response": []
				},
				{
					"name": "Vaciar carrito",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/carts/{{CID}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"carts",
								"{{CID}}"
							]
						},
						"description": "Elimina todos los productos del carrito."
					},
					"response": []
				}
			]
		},
		{
			"name": "03 - Casos de error",
			"item": [
				{
					"name": "Producto inexistente (404)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/products/000000000000000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"products",
								"000000000000000000000000"
							]
						},
						"description": "Debe devolver 404 para un ObjectId válido pero inexistente."
					},
					"response": []
				},
				{
					"name": "Crear producto sin title (400)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"description\":\"sin title\", \"code\":\"ERR-NO-TITLE\", \"price\": 1, \"category\":\"bbs\", \"stock\": 1, \"status\": true }"
						},
						"url": {
							"raw": "{{baseUrl}}/api/products",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"products"
							]
						},
						"description": "Falla de validación por campo requerido faltante."
					},
					"response": []
				},
				{
					"name": "Crear producto con code duplicado (409)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"title\": \"Duplicado\", \"description\":\"dup\", \"code\":\"M4-ELITE-001\", \"price\": 10, \"category\":\"replicas\", \"stock\": 1, \"status\": true }"
						},
						"url": {
							"raw": "{{baseUrl}}/api/products",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"products"
							]
						},
						"description": "Debe fallar por code ya existente (usa M4-ELITE-001)."
					},
					"response": []
				},
				{
					"name": "Stock insuficiente al actualizar carrito (400)",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"quantity\": 9999 }"
						},
						"url": {
							"raw": "{{baseUrl}}/api/carts/{{CID}}/products/{{PID1}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"carts",
								"{{CID}}",
								"products",
								"{{PID1}}"
							]
						},
						"description": "Intenta poner quantity excesiva para forzar error."
					},
					"response": []
				}
			]
		},
		{
			"name": "04 - Vistas (opcional)",
			"item": [
				{
					"name": "Home con paginación (vista)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/?limit=2&page=1&sort=asc&category=replicas",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								""
							],
							"query": [
								{
									"key": "limit",
									"value": "2"
								},
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "sort",
									"value": "asc"
								},
								{
									"key": "category",
									"value": "replicas"
								}
							]
						},
						"description": "Render server-side de Home con tarjetas y paginador."
					},
					"response": []
				},
				{
					"name": "Carrito (vista)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/carts/{{CID}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"carts",
								"{{CID}}"
							]
						},
						"description": "Vista cartelDetail con productos poblados y subtotales."
					},
					"response": []
				},
				{
					"name": "RealTime Products (vista)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/realtimeproducts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"realtimeproducts"
							]
						},
						"description": "Vista en tiempo real con WebSockets."
					},
					"response": []
				}
			]
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:8080"
		},
		{
			"key": "PID1",
			"value": ""
		},
		{
			"key": "PID2",
			"value": ""
		},
		{
			"key": "PID_NUEVO",
			"value": ""
		},
		{
			"key": "CID",
			"value": ""
		}
	]
}