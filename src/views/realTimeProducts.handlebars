<style>
  .rt-container{max-width:1400px;margin:0 auto}
  .rt-header{background:#2d2d2d;border-radius:10px;padding:25px;margin-bottom:30px;box-shadow:0 5px 20px rgba(0,0,0,.3);display:flex;justify-content:space-between;align-items:center;border:1px solid #404040}
  .rt-title{color:#e5e5e5;font-size:1.8rem;display:flex;align-items:center;gap:12px}
  .status-badge{background:#dc2626;color:#fff;padding:10px 20px;border-radius:50px;font-weight:600;display:flex;align-items:center;gap:10px;font-size:.9rem}
  .status-indicator{width:10px;height:10px;background:#4ade80;border-radius:50%;animation:pulse 2s infinite}
  @keyframes pulse{0%{box-shadow:0 0 0 0 rgba(74,222,128,.7)}70%{box-shadow:0 0 0 10px rgba(74,222,128,0)}100%{box-shadow:0 0 0 0 rgba(74,222,128,0)}}

  .main-grid{display:grid;grid-template-columns:1fr 450px;gap:30px;margin-bottom:30px}
  @media (max-width:1200px){.main-grid{grid-template-columns:1fr}}

  .products-section{background:#2d2d2d;border-radius:10px;padding:25px;box-shadow:0 5px 20px rgba(0,0,0,.3);border:1px solid #404040}
  .section-title{color:#e5e5e5;font-size:1.3rem;margin-bottom:20px;padding-bottom:15px;border-bottom:2px solid #404040;display:flex;align-items:center;gap:10px}

  /* === Cards estilo Home === */
  .grid{display:grid;grid-template-columns:repeat(3,1fr);gap:18px}
  @media (max-width:1200px){.grid{grid-template-columns:repeat(2,1fr)}}
  @media (max-width:640px){.grid{grid-template-columns:1fr}}

  .card{background:#1a1a1a;border:1px solid #404040;border-radius:10px;padding:18px;position:relative;overflow:hidden;transition:.25s}
  .card::before{content:'';position:absolute;inset:auto auto 0 0;height:3px;width:100%;background:#dc2626;opacity:.8}
  .card:hover{transform:translateY(-2px);border-color:#dc2626;box-shadow:0 5px 20px rgba(220,38,38,.2)}
  .top{display:flex;justify-content:space-between;gap:10px;margin-bottom:8px}
  .pid{background:#404040;color:#a3a3a3;padding:3px 8px;border-radius:4px;font-size:.7rem;font-family:monospace;max-width:60%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}
  .cat{background:#dc2626;color:#fff;padding:3px 8px;border-radius:4px;font-size:.7rem;font-weight:700;text-transform:uppercase}
  .thumb{width:100%;aspect-ratio:16/9;border:1px solid #404040;background:#2d2d2d;border-radius:8px;display:flex;align-items:center;justify-content:center;margin:10px 0 12px;overflow:hidden}
  .thumb img{width:100%;height:100%;object-fit:cover}
  .title{font-size:1.05rem;color:#e5e5e5;font-weight:800;margin:6px 0 4px}
  .desc{color:#a3a3a3;font-size:.9rem;line-height:1.5;min-height:42px}
  .specs{display:flex;flex-wrap:wrap;gap:10px;border-top:1px solid #404040;padding-top:10px;margin-top:10px}
  .spec{display:flex;gap:6px;align-items:center;background:#141414;border:1px solid #2e2e2e;border-radius:6px;padding:6px 10px;color:#e5e5e5;font-size:.85rem}
  .bottom{display:flex;justify-content:space-between;align-items:center;margin-top:12px}
  .price{color:#dc2626;font-weight:900;font-size:1.2rem}
  .stock{background:#1a1a1a;border:1px solid #404040;color:#e5e5e5;padding:6px 10px;border-radius:8px;font-weight:700;font-size:.85rem}
  .stock.low{border-color:#dc2626;color:#dc2626}
  .stock.out{background:#dc2626;color:#fff;border-color:#dc2626}
  .actions{display:flex;gap:8px}
  .delete-btn{background:#dc2626;color:#fff;border:none;padding:8px 12px;border-radius:6px;cursor:pointer;transition:.2s;font-weight:700;font-size:.85rem}
  .delete-btn:hover{background:#b91c1c;transform:translateY(-1px)}

  /* === Sidebar & Forms === */
  .sidebar{display:flex;flex-direction:column;gap:25px}
  .form-section{background:#2d2d2d;border-radius:10px;padding:25px;box-shadow:0 5px 20px rgba(0,0,0,.3);border:1px solid #404040}
  .form-title{color:#e5e5e5;font-size:1.1rem;margin-bottom:20px;display:flex;align-items:center;gap:10px;padding-bottom:15px;border-bottom:1px solid #404040}
  .form-group{margin-bottom:15px}
  label{display:block;color:#a3a3a3;font-weight:500;margin-bottom:6px;font-size:.85rem;text-transform:uppercase;letter-spacing:.5px}
  input,textarea,select{width:100%;padding:10px 12px;background:#1a1a1a;border:1px solid #404040;border-radius:6px;font-size:.95rem;color:#e5e5e5;transition:.2s;font-family:inherit}
  select{cursor:pointer}
  textarea{resize:vertical;min-height:70px}
  input:focus,textarea:focus,select:focus{outline:none;border-color:#dc2626;box-shadow:0 0 0 2px rgba(220,38,38,.2)}
  button[type="submit"]{width:100%;background:#dc2626;color:#fff;border:none;padding:12px;border-radius:6px;font-size:.95rem;font-weight:700;cursor:pointer;transition:.2s}
  button[type="submit"]:hover{background:#b91c1c;transform:translateY(-1px)}
  .specs-section{background:#1a1a1a;border-radius:6px;padding:15px;margin-top:10px;border:1px solid #404040}
  .specs-title{color:#dc2626;font-size:.9rem;font-weight:600;margin-bottom:10px}
  .form-row{display:grid;grid-template-columns:1fr 1fr;gap:10px}

  /* Toast & Empty */
  .toast{position:fixed;bottom:30px;right:30px;padding:15px 25px;border-radius:8px;color:#fff;font-weight:600;box-shadow:0 10px 30px rgba(0,0,0,.3);animation:slideInRight .3s ease;z-index:1000;display:flex;align-items:center;gap:10px}
  @keyframes slideInRight{from{transform:translateX(100%);opacity:0}to{transform:translateX(0);opacity:1}}
  .toast.success{background:#16a34a}.toast.error{background:#dc2626}.toast.info{background:#2563eb}
  .empty-state{text-align:center;padding:60px 20px;color:#737373;background:#1a1a1a;border-radius:8px;border:1px solid #404040}
  .empty-state svg{width:80px;height:80px;margin-bottom:20px;opacity:.3}
  .empty-state h3{font-size:1.3rem;margin-bottom:10px;color:#e5e5e5}

  #compatibility-container{display:flex;flex-direction:column;gap:5px}
  .compatibility-input{display:flex;gap:5px}
  .add-compatibility-btn{background:#404040;color:#e5e5e5;border:none;padding:8px;border-radius:4px;cursor:pointer;font-size:.8rem}
  .add-compatibility-btn:hover{background:#525252}

  /* Evitar puntitos/bullets por defecto en el contenedor */
    #products-list, .grid { list-style: none; padding-left: 0; }

    /* T√≠tulo m√°s marcado */
    .title { font-size: 1.15rem; font-weight: 900; }

    /* Asegurar que si no hay imagen, no aparezca ning√∫n marcador extra√±o */
    .thumb { display: flex; align-items: center; justify-content: center; }

</style>

<div class="rt-container">
  <!-- Header -->
  <div class="rt-header">
    <h1 class="rt-title">‚ö° Gesti√≥n de Productos en Tiempo Real</h1>
    <div class="status-badge">
      <span class="status-indicator"></span>
      <span>Usuarios conectados: <strong id="usersCount">0</strong></span>
    </div>
  </div>

  <!-- Main Grid -->
  <div class="main-grid">
    <!-- Products Section -->
    <div class="products-section">
      <h2 class="section-title">üì¶ Cat√°logo de Productos</h2>

      <div class="products-container">
        <div id="products-list" class="grid"><!-- Cards din√°micas --></div>

        <div class="empty-state" id="empty-state" style="display:none;">
          <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" width="80" height="80">
            <path d="M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"/>
            <circle cx="12" cy="7" r="4"/>
          </svg>
          <h3>No hay productos</h3>
          <p>Agreg√° tu primer producto usando el formulario</p>
        </div>
      </div>
    </div>

    <!-- Sidebar Forms -->
    <div class="sidebar">
      <!-- Create Product Form -->
      <div class="form-section">
        <h3 class="form-title">‚ûï Crear Nuevo Producto</h3>
        <form id="ws-create-form">
          <!-- Generales -->
          <div class="form-group">
            <label for="title">T√≠tulo*</label>
            <input id="title" name="title" placeholder="M√≠nimo 3 caracteres" required minlength="3"/>
          </div>

          <div class="form-row">
            <div class="form-group">
              <label for="code">C√≥digo √önico*</label>
              <input id="code" name="code" placeholder="Ej: AK74-001" required/>
            </div>
            <div class="form-group">
              <label for="category">Categor√≠a*</label>
              <select id="category" name="category" required>
                <option value="">Seleccionar...</option>
                <option value="replicas">R√©plicas</option>
                <option value="magazines">Cargadores</option>
                <option value="bbs">BBs</option>
                <option value="batteries">Bater√≠as</option>
              </select>
            </div>
          </div>

          <div class="form-row">
            <div class="form-group">
              <label for="price">Precio ($)*</label>
              <input id="price" name="price" type="number" step="0.01" min="0.01" placeholder="Mayor a 0" required/>
            </div>
            <div class="form-group">
              <label for="stock">Stock*</label>
              <input id="stock" name="stock" type="number" min="0" placeholder="‚â• 0" required/>
            </div>
          </div>

          <div class="form-group">
            <label for="description">Descripci√≥n*</label>
            <textarea id="description" name="description" placeholder="M√≠nimo 10 caracteres..." required minlength="10"></textarea>
          </div>

          <div class="form-group">
            <label for="thumbnails">URL de Imagen (opcional)</label>
            <input id="thumbnails" name="thumbnails" placeholder="https://ejemplo.com/imagen.jpg"/>
          </div>

          <div class="form-group">
            <label for="status">
              <input type="checkbox" id="status" name="status" checked style="width:auto;margin-right:8px;"/>
              Producto Activo
            </label>
          </div>

          <!-- Specs Din√°micos -->
          <div id="specs-container" style="display:none;">
            <div class="specs-section">
              <div class="specs-title">üìã Especificaciones Requeridas</div>
              <div id="dynamic-specs"></div>
            </div>
          </div>

          <button type="submit">‚ú® Crear Producto</button>
        </form>
      </div>

      <!-- Delete Product Form -->
      <div class="form-section">
        <h3 class="form-title">üóëÔ∏è Eliminar Producto</h3>
        <form id="ws-delete-form">
          <div class="form-group">
            <label for="deleteId">ID del Producto</label>
            <input id="deleteId" name="id" placeholder="Ingresa o selecciona el ID" required/>
          </div>
          <button type="submit">üóëÔ∏è Eliminar Producto</button>
        </form>
      </div>
    </div>
  </div>
</div>

<!-- Toast Container -->
<div id="toast-container"></div>

<!-- Scripts -->
<script src="/socket.io/socket.io.js"></script>
<script>
  // === Configuraci√≥n de specs por categor√≠a (igual que antes)
  const categorySpecs = {
    replicas: `
      <div class="form-row">
        <div class="form-group">
          <label for="caliber">Calibre*</label>
          <input name="caliber" placeholder="Ej: 6mm" required />
        </div>
        <div class="form-group">
          <label for="weight">Peso (kg)*</label>
          <input name="weight" type="number" step="0.01" min="0.01" placeholder="> 0" required />
        </div>
      </div>
      <div class="form-row">
        <div class="form-group">
          <label for="length">Longitud (cm)*</label>
          <input name="length" type="number" step="0.01" min="0.01" placeholder="> 0" required />
        </div>
        <div class="form-group">
          <label for="firingMode">Modo de Disparo*</label>
          <input name="firingMode" placeholder="Ej: Semi/Auto" required />
        </div>
      </div>
      <div class="form-group">
        <label for="hopUp">
          <input type="checkbox" name="hopUp" style="width:auto;margin-right:8px;" />
          Sistema Hop-Up
        </label>
      </div>
    `,
    magazines: `
      <div class="form-row">
        <div class="form-group">
          <label for="capacity">Capacidad*</label>
          <input name="capacity" type="number" min="1" placeholder="> 0" required />
        </div>
        <div class="form-group">
          <label for="material">Material*</label>
          <input name="material" placeholder="Ej: Pol√≠mero" required />
        </div>
      </div>
      <div class="form-group">
        <label for="compatibility">Compatibilidad* (Separ√° por coma)</label>
        <div id="compatibility-container">
          <input name="compatibility" placeholder="Ej: M4, M16" required />
        </div>
      </div>
    `,
    bbs: `
      <div class="form-row">
        <div class="form-group">
          <label for="weight">Peso (g)*</label>
          <input name="weight" type="number" step="0.01" min="0.01" placeholder="> 0" required />
        </div>
        <div class="form-group">
          <label for="diameter">Di√°metro (mm)*</label>
          <input name="diameter" type="number" step="0.01" min="0.01" placeholder="> 0" required />
        </div>
      </div>
      <div class="form-row">
        <div class="form-group">
          <label for="quantity">Cantidad*</label>
          <input name="quantity" type="number" min="1" placeholder="> 0" required />
        </div>
        <div class="form-group">
          <label for="material">Material*</label>
          <input name="material" placeholder="Ej: Bio" required />
        </div>
      </div>
    `,
    batteries: `
      <div class="form-row">
        <div class="form-group">
          <label for="voltage">Voltaje (V)*</label>
          <input name="voltage" type="number" step="0.1" min="0.1" placeholder="> 0" required />
        </div>
        <div class="form-group">
          <label for="capacity">Capacidad (mAh)*</label>
          <input name="capacity" type="number" min="1" placeholder="> 0" required />
        </div>
      </div>
      <div class="form-row">
        <div class="form-group">
          <label for="chemistry">Qu√≠mica*</label>
          <input name="chemistry" placeholder="Ej: LiPo" required />
        </div>
        <div class="form-group">
          <label for="connector">Conector*</label>
          <input name="connector" placeholder="Ej: Tamiya" required />
        </div>
      </div>
    `
  };

  // Specs din√°micos
  document.getElementById('category').addEventListener('change', function(e){
    const box = document.getElementById('specs-container');
    const dyn = document.getElementById('dynamic-specs');
    if (e.target.value && categorySpecs[e.target.value]) {
      box.style.display = 'block';
      dyn.innerHTML = categorySpecs[e.target.value];
    } else {
      box.style.display = 'none';
      dyn.innerHTML = '';
    }
  });

  // Toasts
  function showToast(message, type='info'){
    const wrap = document.getElementById('toast-container');
    const t = document.createElement('div');
    t.className = `toast ${type}`;
    const icon = type==='success'?'‚úì':type==='error'?'‚úï':'‚Ñπ';
    t.innerHTML = `<span>${icon}</span> ${message}`;
    wrap.appendChild(t);
    setTimeout(()=>{ t.style.animation='slideInRight .3s ease reverse'; setTimeout(()=>t.remove(),300); },3000);
  }

  // === RENDER: tarjetas estilo Home ===
  function renderProducts(products){
    const list = document.getElementById('products-list');
    const empty = document.getElementById('empty-state');

    if (!products || !products.length){
      list.style.display='none'; empty.style.display='block'; return;
    }
    list.style.display='grid'; empty.style.display='none';

    const html = products.map(p=>{
      const id = p._id || p.id || '';
      const cat = (p.category || 'general').toLowerCase();
      const price = Number(p.price||0).toFixed(2);
      const stock = Number(p.stock||0);
      const stockClass = stock===0 ? 'out' : (stock<=10 ? 'low' : '');
      const img = (Array.isArray(p.thumbnails) && p.thumbnails[0]) ? `<img src="${p.thumbnails[0]}" alt="${p.title}">` : 'üéØ';

      // Muestro hasta 4 specs clave si existen
      const specs = p.specs || {};
      const specPairs = Object.entries(specs).slice(0,4).map(([k,v])=>`<span class="spec"><strong>${k}:</strong> ${v}</span>`).join('');

      return `
        <article class="card" data-product-id="${id}">
          <div class="top">
            <span class="pid">ID: ${id}</span>
            <span class="cat">${cat}</span>
          </div>

          <div class="thumb">${img}</div>

          <h3 class="title">${p.title || 'Sin t√≠tulo'}</h3>
          <p class="desc">${p.description || 'Sin descripci√≥n'}</p>

          ${ specPairs ? `<div class="specs">${specPairs}</div>` : '' }

          <div class="bottom">
            <span class="price">$${price}</span>
            <div class="actions">
              <span class="stock ${stockClass}">Stock: ${stock}</span>
              <button class="delete-btn" onclick="deleteProduct('${id}')">Eliminar</button>
            </div>
          </div>
        </article>
      `;
    }).join('');

    list.innerHTML = html;
  }

  // Eliminar (rellena el form y dispara)
  function deleteProduct(id){
    if (confirm('¬øEst√°s seguro de que deseas eliminar este producto?')){
      document.getElementById('deleteId').value = id;
      document.getElementById('ws-delete-form').dispatchEvent(new Event('submit'));
    }
  }

  // Prepara payload del form (normaliza tipos)
  function prepareFormData(form){
    const formData = new FormData(form);
    const data = {};
    for (let [key, value] of formData.entries()) {
      if (key==='price' || key==='stock') data[key]=Number(value);
      else if (key==='status') data[key]=form.status.checked;
      else if (key==='thumbnails' && value) data[key]=[value];
      else if (value && !['caliber','weight','length','firingMode','hopUp','capacity','compatibility','material','diameter','quantity','voltage','chemistry','connector'].includes(key)) {
        data[key]=value;
      }
    }
    const category = data.category;
    if (category){
      data.specs = {};
      switch(category){
        case 'replicas':
          data.specs.caliber = formData.get('caliber');
          data.specs.weight = Number(formData.get('weight'));
          data.specs.length = Number(formData.get('length'));
          data.specs.firingMode = formData.get('firingMode');
          data.specs.hopUp = form.hopUp ? form.hopUp.checked : false;
          break;
        case 'magazines':
          data.specs.capacity = Number(formData.get('capacity'));
          data.specs.material = formData.get('material');
          const comp = formData.get('compatibility');
          data.specs.compatibility = comp ? comp.split(',').map(c=>c.trim()).filter(Boolean) : [];
          break;
        case 'bbs':
          data.specs.weight = Number(formData.get('weight'));
          data.specs.diameter = Number(formData.get('diameter'));
          data.specs.quantity = Number(formData.get('quantity'));
          data.specs.material = formData.get('material');
          break;
        case 'batteries':
          data.specs.voltage = Number(formData.get('voltage'));
          data.specs.capacity = Number(formData.get('capacity'));
          data.specs.chemistry = formData.get('chemistry');
          data.specs.connector = formData.get('connector');
          break;
      }
    }
    return data;
  }

  // Exponer helpers globales (por si tu realtime.js los usa)
  window.renderProducts = renderProducts;
  window.prepareFormData = prepareFormData;
  window.showToast = showToast;
  window.deleteProduct = deleteProduct;
</script>

<!-- Tu l√≥gica de sockets/fetch -->
<script src="/js/realtime.js"></script>
