<style>
    .rt-container {
        max-width: 1400px;
        margin: 0 auto;
    }

    .rt-header {
        background: #2d2d2d;
        border-radius: 10px;
        padding: 25px;
        margin-bottom: 30px;
        box-shadow: 0 5px 20px rgba(0, 0, 0, 0.3);
        display: flex;
        justify-content: space-between;
        align-items: center;
        border: 1px solid #404040;
    }

    .rt-title {
        color: #e5e5e5;
        font-size: 1.8rem;
        display: flex;
        align-items: center;
        gap: 12px;
    }

    .status-badge {
        background: #dc2626;
        color: white;
        padding: 10px 20px;
        border-radius: 50px;
        font-weight: 600;
        display: flex;
        align-items: center;
        gap: 10px;
        font-size: 0.9rem;
    }

    .status-indicator {
        width: 10px;
        height: 10px;
        background: #4ade80;
        border-radius: 50%;
        animation: pulse 2s infinite;
    }

    @keyframes pulse {
        0% { box-shadow: 0 0 0 0 rgba(74, 222, 128, 0.7); }
        70% { box-shadow: 0 0 0 10px rgba(74, 222, 128, 0); }
        100% { box-shadow: 0 0 0 0 rgba(74, 222, 128, 0); }
    }

    .main-grid {
        display: grid;
        grid-template-columns: 1fr 450px;
        gap: 30px;
        margin-bottom: 30px;
    }

    @media (max-width: 1200px) {
        .main-grid {
            grid-template-columns: 1fr;
        }
    }

    .products-section {
        background: #2d2d2d;
        border-radius: 10px;
        padding: 25px;
        box-shadow: 0 5px 20px rgba(0, 0, 0, 0.3);
        border: 1px solid #404040;
    }

    .section-title {
        color: #e5e5e5;
        font-size: 1.3rem;
        margin-bottom: 20px;
        padding-bottom: 15px;
        border-bottom: 2px solid #404040;
        display: flex;
        align-items: center;
        gap: 10px;
    }

    .products-container {
        max-height: 700px;
        overflow-y: auto;
        padding-right: 10px;
    }

    .products-container::-webkit-scrollbar {
        width: 8px;
    }

    .products-container::-webkit-scrollbar-track {
        background: #1a1a1a;
        border-radius: 10px;
    }

    .products-container::-webkit-scrollbar-thumb {
        background: #dc2626;
        border-radius: 10px;
    }

    .product-card {
        background: #1a1a1a;
        border-radius: 8px;
        padding: 20px;
        margin-bottom: 15px;
        border: 1px solid #404040;
        transition: all 0.3s ease;
        animation: slideIn 0.3s ease;
        position: relative;
    }

    .product-card::before {
        content: '';
        position: absolute;
        left: 0;
        top: 0;
        bottom: 0;
        width: 3px;
        background: #dc2626;
    }

    @keyframes slideIn {
        from {
            opacity: 0;
            transform: translateY(20px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .product-card:hover {
        border-color: #dc2626;
        transform: translateX(5px);
    }

    .product-header {
        display: flex;
        justify-content: space-between;
        align-items: start;
        margin-bottom: 12px;
    }

    .product-meta {
        display: flex;
        gap: 10px;
        align-items: center;
    }

    .product-id {
        background: #404040;
        color: #a3a3a3;
        padding: 3px 8px;
        border-radius: 4px;
        font-size: 0.7rem;
        font-family: monospace;
    }

    .product-category {
        background: #dc2626;
        color: white;
        padding: 3px 8px;
        border-radius: 4px;
        font-size: 0.7rem;
        font-weight: 600;
        text-transform: uppercase;
    }

    .product-title {
        color: #e5e5e5;
        font-size: 1.1rem;
        font-weight: 700;
        margin-bottom: 8px;
    }

    .product-description {
        color: #737373;
        font-size: 0.85rem;
        margin-bottom: 12px;
        line-height: 1.5;
    }

    .product-details {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding-top: 12px;
        border-top: 1px solid #404040;
    }

    .product-price {
        color: #dc2626;
        font-size: 1.3rem;
        font-weight: 700;
    }

    .product-stock {
        background: #1a1a1a;
        border: 1px solid #404040;
        color: #e5e5e5;
        padding: 5px 12px;
        border-radius: 20px;
        font-size: 0.85rem;
        font-weight: 600;
    }

    .product-stock.low {
        border-color: #dc2626;
        color: #dc2626;
    }

    .delete-btn {
        background: #dc2626;
        color: white;
        border: none;
        padding: 6px 14px;
        border-radius: 6px;
        cursor: pointer;
        transition: all 0.3s ease;
        font-weight: 600;
        font-size: 0.8rem;
    }

    .delete-btn:hover {
        background: #b91c1c;
        transform: scale(1.05);
    }

    .sidebar {
        display: flex;
        flex-direction: column;
        gap: 25px;
    }

    .form-section {
        background: #2d2d2d;
        border-radius: 10px;
        padding: 25px;
        box-shadow: 0 5px 20px rgba(0, 0, 0, 0.3);
        border: 1px solid #404040;
    }

    .form-title {
        color: #e5e5e5;
        font-size: 1.1rem;
        margin-bottom: 20px;
        display: flex;
        align-items: center;
        gap: 10px;
        padding-bottom: 15px;
        border-bottom: 1px solid #404040;
    }

    .form-group {
        margin-bottom: 15px;
    }

    label {
        display: block;
        color: #a3a3a3;
        font-weight: 500;
        margin-bottom: 6px;
        font-size: 0.85rem;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    input, textarea, select {
        width: 100%;
        padding: 10px 12px;
        background: #1a1a1a;
        border: 1px solid #404040;
        border-radius: 6px;
        font-size: 0.95rem;
        color: #e5e5e5;
        transition: all 0.3s ease;
        font-family: inherit;
    }

    select {
        cursor: pointer;
    }

    textarea {
        resize: vertical;
        min-height: 70px;
    }

    input:focus, textarea:focus, select:focus {
        outline: none;
        border-color: #dc2626;
        box-shadow: 0 0 0 2px rgba(220, 38, 38, 0.2);
    }

    button[type="submit"] {
        width: 100%;
        background: #dc2626;
        color: white;
        border: none;
        padding: 12px;
        border-radius: 6px;
        font-size: 0.95rem;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
    }

    button[type="submit"]:hover {
        background: #b91c1c;
        transform: translateY(-1px);
    }

    .specs-section {
        background: #1a1a1a;
        border-radius: 6px;
        padding: 15px;
        margin-top: 10px;
        border: 1px solid #404040;
    }

    .specs-title {
        color: #dc2626;
        font-size: 0.9rem;
        font-weight: 600;
        margin-bottom: 10px;
    }

    .form-row {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 10px;
    }

    .toast {
        position: fixed;
        bottom: 30px;
        right: 30px;
        padding: 15px 25px;
        border-radius: 8px;
        color: white;
        font-weight: 600;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
        animation: slideInRight 0.3s ease;
        z-index: 1000;
        display: flex;
        align-items: center;
        gap: 10px;
    }

    @keyframes slideInRight {
        from {
            transform: translateX(100%);
            opacity: 0;
        }
        to {
            transform: translateX(0);
            opacity: 1;
        }
    }

    .toast.success {
        background: #16a34a;
    }

    .toast.error {
        background: #dc2626;
    }

    .toast.info {
        background: #2563eb;
    }

    .empty-state {
        text-align: center;
        padding: 60px 20px;
        color: #737373;
        background: #1a1a1a;
        border-radius: 8px;
        border: 1px solid #404040;
    }

    .empty-state svg {
        width: 80px;
        height: 80px;
        margin-bottom: 20px;
        opacity: 0.3;
    }

    .empty-state h3 {
        font-size: 1.3rem;
        margin-bottom: 10px;
        color: #e5e5e5;
    }

    #compatibility-container {
        display: flex;
        flex-direction: column;
        gap: 5px;
    }

    .compatibility-input {
        display: flex;
        gap: 5px;
    }

    .add-compatibility-btn {
        background: #404040;
        color: #e5e5e5;
        border: none;
        padding: 8px;
        border-radius: 4px;
        cursor: pointer;
        font-size: 0.8rem;
    }

    .add-compatibility-btn:hover {
        background: #525252;
    }
</style>

<div class="rt-container">
    <!-- Header -->
    <div class="rt-header">
        <h1 class="rt-title">
            ⚡ Gestión de Productos en Tiempo Real
        </h1>
        <div class="status-badge">
            <span class="status-indicator"></span>
            <span>Usuarios conectados: <strong id="usersCount">0</strong></span>
        </div>
    </div>

    <!-- Main Grid -->
    <div class="main-grid">
        <!-- Products Section -->
        <div class="products-section">
            <h2 class="section-title">
                📦 Catálogo de Productos
            </h2>
            <div class="products-container">
                <div id="products-list">
                    <!-- Los productos se cargarán aquí dinámicamente -->
                </div>
                <div class="empty-state" id="empty-state" style="display: none;">
                    <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" width="80" height="80">
                        <path d="M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"/>
                        <circle cx="12" cy="7" r="4"/>
                    </svg>
                    <h3>No hay productos</h3>
                    <p>Agrega tu primer producto usando el formulario</p>
                </div>
            </div>
        </div>

        <!-- Sidebar Forms -->
        <div class="sidebar">
            <!-- Create Product Form -->
            <div class="form-section">
                <h3 class="form-title">
                    ➕ Crear Nuevo Producto
                </h3>
                <form id="ws-create-form">
                    <!-- Campos obligatorios generales -->
                    <div class="form-group">
                        <label for="title">Título*</label>
                        <input 
                            id="title"
                            name="title" 
                            placeholder="Mínimo 3 caracteres" 
                            required 
                            minlength="3"
                        />
                    </div>

                    <div class="form-row">
                        <div class="form-group">
                            <label for="code">Código Único*</label>
                            <input 
                                id="code"
                                name="code" 
                                placeholder="Ej: AK74-001" 
                                required 
                            />
                        </div>
                        
                        <div class="form-group">
                            <label for="category">Categoría*</label>
                            <select id="category" name="category" required>
                                <option value="">Seleccionar...</option>
                                <option value="replicas">Réplicas</option>
                                <option value="magazines">Cargadores</option>
                                <option value="bbs">BBs</option>
                                <option value="batteries">Baterías</option>
                            </select>
                        </div>
                    </div>

                    <div class="form-row">
                        <div class="form-group">
                            <label for="price">Precio ($)*</label>
                            <input 
                                id="price"
                                name="price" 
                                type="number" 
                                step="0.01"
                                min="0.01"
                                placeholder="Mayor a 0" 
                                required 
                            />
                        </div>
                        
                        <div class="form-group">
                            <label for="stock">Stock*</label>
                            <input 
                                id="stock"
                                name="stock" 
                                type="number"
                                min="0"
                                placeholder="≥ 0" 
                                required 
                            />
                        </div>
                    </div>

                    <div class="form-group">
                        <label for="description">Descripción*</label>
                        <textarea 
                            id="description"
                            name="description" 
                            placeholder="Mínimo 10 caracteres..."
                            required
                            minlength="10"
                        ></textarea>
                    </div>

                    <div class="form-group">
                        <label for="thumbnails">URL de Imagen (opcional)</label>
                        <input 
                            id="thumbnails"
                            name="thumbnails" 
                            placeholder="https://ejemplo.com/imagen.jpg"
                        />
                    </div>

                    <div class="form-group">
                        <label for="status">
                            <input 
                                type="checkbox" 
                                id="status" 
                                name="status" 
                                checked
                                style="width: auto; margin-right: 8px;"
                            />
                            Producto Activo
                        </label>
                    </div>

                    <!-- Sección de Specs Dinámicos -->
                    <div id="specs-container" style="display: none;">
                        <div class="specs-section">
                            <div class="specs-title">📋 Especificaciones Requeridas</div>
                            <div id="dynamic-specs">
                                <!-- Se llenará dinámicamente según categoría -->
                            </div>
                        </div>
                    </div>

                    <button type="submit">
                        ✨ Crear Producto
                    </button>
                </form>
            </div>

            <!-- Delete Product Form -->
            <div class="form-section">
                <h3 class="form-title">
                    🗑️ Eliminar Producto
                </h3>
                <form id="ws-delete-form">
                    <div class="form-group">
                        <label for="deleteId">ID del Producto</label>
                        <input 
                            id="deleteId"
                            name="id" 
                            placeholder="Ingresa o selecciona el ID" 
                            required 
                        />
                    </div>
                    <button type="submit">
                        🗑️ Eliminar Producto
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Toast Container -->
<div id="toast-container"></div>

<!-- Scripts -->
<script src="/socket.io/socket.io.js"></script>
<script>
    // Configuración de specs por categoría
    const categorySpecs = {
        replicas: `
            <div class="form-row">
                <div class="form-group">
                    <label for="caliber">Calibre*</label>
                    <input name="caliber" placeholder="Ej: 6mm" required />
                </div>
                <div class="form-group">
                    <label for="weight">Peso (kg)*</label>
                    <input name="weight" type="number" step="0.01" min="0.01" placeholder="> 0" required />
                </div>
            </div>
            <div class="form-row">
                <div class="form-group">
                    <label for="length">Longitud (cm)*</label>
                    <input name="length" type="number" step="0.01" min="0.01" placeholder="> 0" required />
                </div>
                <div class="form-group">
                    <label for="firingMode">Modo de Disparo*</label>
                    <input name="firingMode" placeholder="Ej: Semi/Auto" required />
                </div>
            </div>
            <div class="form-group">
                <label for="hopUp">
                    <input type="checkbox" name="hopUp" style="width: auto; margin-right: 8px;" />
                    Sistema Hop-Up
                </label>
            </div>
        `,
        magazines: `
            <div class="form-row">
                <div class="form-group">
                    <label for="capacity">Capacidad*</label>
                    <input name="capacity" type="number" min="1" placeholder="> 0" required />
                </div>
                <div class="form-group">
                    <label for="material">Material*</label>
                    <input name="material" placeholder="Ej: Polímero" required />
                </div>
            </div>
            <div class="form-group">
                <label for="compatibility">Compatibilidad* (Presiona Enter para agregar)</label>
                <div id="compatibility-container">
                    <input name="compatibility" placeholder="Ej: M4, M16" required />
                </div>
            </div>
        `,
        bbs: `
            <div class="form-row">
                <div class="form-group">
                    <label for="weight">Peso (g)*</label>
                    <input name="weight" type="number" step="0.01" min="0.01" placeholder="> 0" required />
                </div>
                <div class="form-group">
                    <label for="diameter">Diámetro (mm)*</label>
                    <input name="diameter" type="number" step="0.01" min="0.01" placeholder="> 0" required />
                </div>
            </div>
            <div class="form-row">
                <div class="form-group">
                    <label for="quantity">Cantidad*</label>
                    <input name="quantity" type="number" min="1" placeholder="> 0" required />
                </div>
                <div class="form-group">
                    <label for="material">Material*</label>
                    <input name="material" placeholder="Ej: Bio" required />
                </div>
            </div>
        `,
        batteries: `
            <div class="form-row">
                <div class="form-group">
                    <label for="voltage">Voltaje (V)*</label>
                    <input name="voltage" type="number" step="0.1" min="0.1" placeholder="> 0" required />
                </div>
                <div class="form-group">
                    <label for="capacity">Capacidad (mAh)*</label>
                    <input name="capacity" type="number" min="1" placeholder="> 0" required />
                </div>
            </div>
            <div class="form-row">
                <div class="form-group">
                    <label for="chemistry">Química*</label>
                    <input name="chemistry" placeholder="Ej: LiPo" required />
                </div>
                <div class="form-group">
                    <label for="connector">Conector*</label>
                    <input name="connector" placeholder="Ej: Tamiya" required />
                </div>
            </div>
        `
    };

    // Manejo dinámico de categorías
    document.getElementById('category').addEventListener('change', function(e) {
        const specsContainer = document.getElementById('specs-container');
        const dynamicSpecs = document.getElementById('dynamic-specs');
        
        if (e.target.value && categorySpecs[e.target.value]) {
            specsContainer.style.display = 'block';
            dynamicSpecs.innerHTML = categorySpecs[e.target.value];
        } else {
            specsContainer.style.display = 'none';
            dynamicSpecs.innerHTML = '';
        }
    });

    // Función para mostrar toasts
    function showToast(message, type = 'info') {
        const toastContainer = document.getElementById('toast-container');
        const toast = document.createElement('div');
        toast.className = `toast ${type}`;
        
        const icon = type === 'success' ? '✓' : type === 'error' ? '✕' : 'ℹ';
        toast.innerHTML = `<span>${icon}</span> ${message}`;
        
        toastContainer.appendChild(toast);
        
        setTimeout(() => {
            toast.style.animation = 'slideInRight 0.3s ease reverse';
            setTimeout(() => toast.remove(), 300);
        }, 3000);
    }

    // Función para renderizar productos
    function renderProducts(products) {
        const productsList = document.getElementById('products-list');
        const emptyState = document.getElementById('empty-state');
        
        if (!products || products.length === 0) {
            productsList.style.display = 'none';
            emptyState.style.display = 'block';
            return;
        }
        
        productsList.style.display = 'block';
        emptyState.style.display = 'none';
        
        productsList.innerHTML = products.map(product => `
            <div class="product-card" data-product-id="${product._id || product.id}">
                <div class="product-header">
                    <div class="product-meta">
                        <span class="product-id">ID: ${product._id || product.id}</span>
                        <span class="product-category">${product.category || 'general'}</span>
                    </div>
                    <button class="delete-btn" onclick="deleteProduct('${product._id || product.id}')">
                        Eliminar
                    </button>
                </div>
                <h3 class="product-title">${product.title}</h3>
                <p class="product-description">${product.description || 'Sin descripción'}</p>
                <div class="product-details">
                    <span class="product-price">$${parseFloat(product.price).toFixed(2)}</span>
                    <span class="product-stock ${product.stock <= 10 ? 'low' : ''}">
                        Stock: ${product.stock}
                    </span>
                </div>
            </div>
        `).join('');
    }

    // Función para eliminar producto
    function deleteProduct(id) {
        if (confirm('¿Estás seguro de que deseas eliminar este producto?')) {
            document.getElementById('deleteId').value = id;
            document.getElementById('ws-delete-form').dispatchEvent(new Event('submit'));
        }
    }

    // Preparar datos del formulario incluyendo specs
    function prepareFormData(form) {
        const formData = new FormData(form);
        const data = {};
        
        // Campos generales
        for (let [key, value] of formData.entries()) {
            if (key === 'price' || key === 'stock') {
                data[key] = Number(value);
            } else if (key === 'status') {
                data[key] = form.status.checked;
            } else if (key === 'thumbnails' && value) {
                data[key] = [value];
            } else if (value && !['caliber', 'weight', 'length', 'firingMode', 'hopUp', 'capacity', 'compatibility', 'material', 'diameter', 'quantity', 'voltage', 'chemistry', 'connector'].includes(key)) {
                data[key] = value;
            }
        }
        
        // Agregar specs según categoría
        const category = data.category;
        if (category) {
            data.specs = {};
            
            switch(category) {
                case 'replicas':
                    data.specs.caliber = formData.get('caliber');
                    data.specs.weight = Number(formData.get('weight'));
                    data.specs.length = Number(formData.get('length'));
                    data.specs.firingMode = formData.get('firingMode');
                    data.specs.hopUp = form.hopUp ? form.hopUp.checked : false;
                    break;
                    
                case 'magazines':
                    data.specs.capacity = Number(formData.get('capacity'));
                    data.specs.material = formData.get('material');
                    const compValue = formData.get('compatibility');
                    data.specs.compatibility = compValue ? compValue.split(',').map(c => c.trim()) : [];
                    break;
                    
                case 'bbs':
                    data.specs.weight = Number(formData.get('weight'));
                    data.specs.diameter = Number(formData.get('diameter'));
                    data.specs.quantity = Number(formData.get('quantity'));
                    data.specs.material = formData.get('material');
                    break;
                    
                case 'batteries':
                    data.specs.voltage = Number(formData.get('voltage'));
                    data.specs.capacity = Number(formData.get('capacity'));
                    data.specs.chemistry = formData.get('chemistry');
                    data.specs.connector = formData.get('connector');
                    break;
            }
        }
        
        return data;
    }
</script>
<script src="/js/realtime.js"></script>